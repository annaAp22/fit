{"version":3,"sources":["loader.js","inject_params.js","cart.js","defer.js","thank.js"],"names":[],"mappingstOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lib.js","sourcesContent":["$(function() {\n    window.loader = $('#loader');\n\n    $(document).ajaxStart(function() {\n        if (window.loader.hasClass('hidden')) $(window.loader).removeClass('hidden');\n    });\n\n    $(document).ajaxStop(function() {\n        if (!window.loader.hasClass('hidden')) $(window.loader).addClass('hidden');\n    });\n});","// Подстановка параметров в строку\n// Например:\n// window.injectParams('/url/#id/#name', { id: 'foo', name: 'bar' })\n// => /url/foo/bar\nwindow.injectParams = function(str, params) {\n    for(var paramName in params)\n        str = str.split('#' + paramName).join(params[paramName]);\n    return str;\n};","// Инициализация корзины\nwindow.initCart = function(options) {\n    window.cart = options;\n\n    // Установка опций по умолчанию\n    setDefault = function(optName, defaultValue) {\n        window.cart[optName] = typeof(window.cart[optName]) === 'undefined' ? defaultValue : window.cart[optName];\n    };\n\n    // Упаковка в массив\n    toArray = function(arg) {\n        if(!$.isArray(arg)) arg = [ arg ];\n        return arg;\n    };\n\n    // Проверить есть ли позиция в заданном списке по ID\n    isInList = function(listSelector, listItemSelector, id) {\n        return $(listSelector).find(listItemSelector + '[data-id=' + id + ']').length > 0;\n    };\n\n    // Проверить пуст ли заданный список\n    isEmptyList = function(listSelector, listItemSelector) {\n        return $(listSelector).find(listItemSelector).length <= 0;\n    };\n\n    // Добавить позицию в заданный список по шаблону\n    // убирает класс \"empty\" с главного блока\n    prependList = function(blockSelector, listSelector, listItemSelector, template, params) {\n        if(!isInList(listSelector, listItemSelector, params.id)) {\n            var html = window.injectParams(template, params);\n            $(listSelector).prepend(html);\n            $(blockSelector).removeClass(window.cart.emptyClass);\n        }\n    };\n\n    // Убрать позицию из заданного списка по ID\n    // добавляет класс \"empty\" на главный блок, если список пуст\n    removeItemFromList = function(blockSelector, listSelector, listItemSelector, id) {\n        $(listSelector).find(listItemSelector).each(function(i, el) {\n            if($(el).data('id') == id) $(el).remove();\n        });\n\n        if(isEmptyList(listSelector, listItemSelector))\n            $(blockSelector).addClass(window.cart.emptyClass);\n    };\n\n    // AJAX: Добавить товар в корзину\n    add = function(id, qnt, extra_params, callback) {\n        qnt = qnt || 1;\n        var method = typeof(window.cart.addMethod) === 'undefined' ? 'get' : window.cart.addMethod;\n        $[method](\n            window.injectParams(window.cart.addUrl, {id: id, quantity: qnt }),\n            extra_params,\n            callback\n        );\n    };\n\n    // AJAX: Убрать товар из корзины\n    remove = function(id, callback) {\n        var method = typeof(window.cart.removeMethod) === 'undefined' ? 'get' : window.cart.removeMethod;\n        $.ajax({\n            type: method,\n            url: window.injectParams(window.cart.removeUrl, { id: id }),\n            success: callback\n        });\n    };\n\n    // Обновление информационных элементов\n    updateTotals = function(count, amount, count_name) {\n        for(var index in window.cart.quantitySelectors)\n            $(window.cart.quantitySelectors[index]).text(count);\n\n        for(var index in window.cart.totalSelectors)\n            if($(window.cart.totalSelectors[index]).data('without-currency') !== 'undefined')\n                $(window.cart.totalSelectors[index]).text(amount);\n            else\n                $(window.cart.totalSelectors[index]).text(amount + ' ' + window.cart.currency);\n\n        for(var index in window.cart.quantityNameSelectors)\n            $(window.cart.quantityNameSelectors[index]).text(count_name);\n    };\n\n    // Добавить позицию в виджет корзины\n    insertInfoblockListItem = function(params) {\n        prependList(\n            window.cart.infoblockSelector,\n            window.cart.infoblockListSelector,\n            window.cart.infoblockListItemSelector,\n            window.cart.infoblockListItemTemplate,\n            params);\n    };\n\n    // Добавить позицию на странице корзины\n    insertDetailsListItem = function(params) {\n        prependList(\n            window.cart.detailsSelector,\n            window.cart.detailsListSelector,\n            window.cart.detailsListItemSelector,\n            window.cart.detailsListItemTemplate,\n            params);\n    };\n\n    // Убрать позицию из виджета корзины\n    removeInfoblockListItem = function(id) {\n        removeItemFromList(\n            window.cart.infoblockSelector,\n            window.cart.infoblockListSelector,\n            window.cart.infoblockListItemSelector,\n            id);\n    };\n\n    // Убрать позицию со страницы корзины\n    removeDetailsListItem = function(id) {\n        removeItemFromList(\n            window.cart.detailsSelector,\n            window.cart.detailsListSelector,\n            window.cart.detailsListItemSelector,\n            id);\n    };\n\n    // Callback для добавляющих элементов\n    addFunction = function() {\n        var requirements = $(this).data('requires'),\n            id           = $(this).data('id'),\n            quantity     = $(this).data('quantity'),\n            noId         = typeof(id) === 'undefined',\n            noQuantity   = typeof(quantity) === 'undefined',\n            _t           = this;\n\n        if(noId) console.error('Define product id as `data-id` attribute on `Add to cart` button.');\n        if(noQuantity) console.error('Define quantity as `data-quantity` attribute on `Add to cart` button.')\n\n        if(noId || noQuantity) return;\n\n        var extra_params = {};\n        for(var i in requirements) {\n            var requirement = $(this).data(requirements[i]);\n            if(typeof(requirement) === 'undefined') {\n                var message = $(this).data('requires-' + requirements[i] + '-message');\n                window.thankYouCustomer(message);\n                return;\n            }\n\n            extra_params[requirements[i]] = requirement;\n        }\n\n        if(typeof(window.cart.animationCallback) !== 'undefined') window.cart.animationCallback();\n\n        add(id, quantity, extra_params, function(data) {\n            updateTotals(data.count, data.amount, data.count_name);\n            insertInfoblockListItem({\n                currency: window.cart.currency,\n                id: $(_t).data('id'),\n                class: window.cart.infoblockListItemSelector.substr(1),\n                img: $(_t).data('img'),\n                title: $(_t).data('title'),\n                price: $(_t).data('price'),\n                link: $(_t).data('link')\n            });\n            insertDetailsListItem({\n                currency: window.cart.currency,\n                id: $(_t).data('id'),\n                title: $(_t).data('title'),\n                img: $(_t).data('img'),\n                link: $(_t).data('link'),\n                stock: ($(_t).data('stock') > 0) ? window.cart.detailsInStock : window.cart.detailsOutOfStock,\n                quantity: $(_t).data('quantity'),\n                price: $(_t).data('price'),\n                item_total: parseInt($(_t).data('price')) * parseInt($(_t).data('quantity')),\n            });\n            window.cart.updateCallback('add', _t, data);\n        });\n    };\n\n    // Callback для убирающих элементов\n    removeFunction = function() {\n        var id         = $(this).data('id'),\n            quantity   = $(this).data('quantity'),\n            _t         = this;\n\n        if(typeof(id) === 'undefined') {\n            console.error('Define product id as `data-id` attribute on `Add to cart` button.');\n            return;\n        }\n\n        remove(id, function(data) {\n            updateTotals(data.count, data.amount, data.count_name);\n            removeInfoblockListItem($(_t).data('id'));\n            removeDetailsListItem($(_t).data('id'));\n            window.cart.updateCallback('remove', _t, data);\n        });\n    };\n\n    // Инициализация\n    // Опции по умполчанию\n    setDefault('emptyClass', 'empty-cart');\n    setDefault('currency', 'р.');\n    setDefault('addMethod', 'get');\n    setDefault('removeMethod', 'get');\n\n    // Элементы, которые должны быть преобразованы в массив\n    var needToBeAnArray = [\n        'addSelectors',\n        'removeSelectors',\n        'quantitySelectors',\n        'quantityNameSelectors',\n        'totalSelectors'\n    ];\n    for(var index in needToBeAnArray)\n        window.cart[needToBeAnArray[index]] = toArray(window.cart[needToBeAnArray[index]]);\n\n    // Элементы, добавляющие товар в корзину\n    for(var index in window.cart.addSelectors)\n        $(document).on('click', window.cart.addSelectors[index], addFunction);\n\n    // Элементы, убирающие товар из корзины\n    for(var index in window.cart.removeSelectors)\n        $(document).on('click', window.cart.removeSelectors[index], removeFunction);\n\n    $(window.cart.detailsSelector).on('change', window.cart.detailsQuantityInputSelector, function() {\n        var currentRow = $(this).parents(window.cart.detailsListItemSelector)[0],\n            newQuantity = parseInt($(this).val()),\n            price = parseInt($(this).data('price')),\n            subTotal = newQuantity * price;\n\n        // console.log($(currentRow).find(window.cart.detailsSubtotalSelector).text(subTotal));\n        // .find(window.cart.detailsSubtotalSelector)\n    });\n};\n\n","window.initDefer = function(options) {\n    window.defer = options;\n\n    var requiredOptions = ['url', 'buttonSelector', 'countSelector'];\n\n    for(var index in requiredOptions) {\n        if(typeof(window.defer[requiredOptions[index]]) === 'undefined') {\n            console.error('Function `initDefer` requires `' + requiredOptions[index] + '` option.');\n            return;\n        }\n    }\n\n    if(typeof(window.defer.activeClass) === 'undefined')\n        window.defer.activeClass = 'active';\n\n    $(document).on('click', window.defer.buttonSelector, function() {\n        var productId = $(this).data('id');\n\n        if($(this).hasClass(window.defer.activeClass))\n            $(this).removeClass(window.defer.activeClass);\n        else $(this).addClass(window.defer.activeClass);\n\n        $.get(window.injectParams(window.defer.url, {id: productId}), function(data) {\n            $(window.defer.countSelector).text(data);\n        });\n    });\n};\n","// Открывает модальное окно с сообщением для покупателя\n// window.thankYouCustomer('Error'); - выведет сообщение об ошибке\n// window.thankYouCustomer('A message', 'Bob') - поблагодарит Bob`а за лид\nwindow.thankYouCustomer = function(message, name) {\n    var $modal = $('#thanks'),\n        $title = $modal.find('.form-modal_title'),\n        $message = $modal.find('p');\n\n    if(typeof(name) === 'undefined') {\n        $title.text('Произошла ошибка!');\n        $message.text(message);\n    } else {\n        $title.text('Спасибо, ' + name + '!');\n        $message.text(message);\n    }\n\n    $.fancybox.open({ src: '#thanks', type: 'inline' });\n};\n"]}